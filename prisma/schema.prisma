// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @unique
  session  Session[]
  Key      Key[]
  username String    @unique

  @@map("user")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt @default(0)
  idle_expires   BigInt @default(0)
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  expires         BigInt?
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}

model RouterTemplate {
  id          String  @id @unique @default(cuid())
  title       String  @unique
  template    String
  exampleData String?
  editable    Boolean @default(true)

  masterSource   Source? @relation(name: "sourceRouterTemplates", fields: [masterSourceId], references: [id])
  masterSourceId String?

  Source Source[]
  Host   Host[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServiceTemplate {
  id          String  @id @unique @default(cuid())
  title       String  @unique
  template    String
  exampleData String?
  editable    Boolean @default(true)

  masterSource   Source? @relation(name: "sourceServiceTemplates", fields: [masterSourceId], references: [id])
  masterSourceId String?

  Source Source[]
  Host   Host[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Source {
  id          String    @id @unique @default(cuid())
  title       String
  type        String
  address     String
  autoDelete  Boolean   @default(false)
  enabled     Boolean   @default(true)
  parameters  String?
  lastRefresh DateTime?

  defaultRouter     RouterTemplate?  @relation(fields: [routerTemplateId], references: [id])
  routerTemplateId  String?
  defaultService    ServiceTemplate? @relation(fields: [serviceTemplateId], references: [id])
  serviceTemplateId String?

  ownedServiceTemplates ServiceTemplate[] @relation(name: "sourceServiceTemplates")
  ownedRouterTemplates  RouterTemplate[]  @relation(name: "sourceRouterTemplates")

  Host Host[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Host {
  id         String   @id @unique @default(cuid())
  title      String
  identifier String
  parameters String?
  lastSeen   DateTime
  errors     String?

  source   Source @relation(fields: [sourceId], references: [id])
  sourceId String

  customRouter     String?
  router           RouterTemplate? @relation(fields: [routerTemplateId], references: [id])
  routerTemplateId String?

  customService     String?
  service           ServiceTemplate? @relation(fields: [serviceTemplateId], references: [id])
  serviceTemplateId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
