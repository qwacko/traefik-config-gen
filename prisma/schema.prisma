// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @unique @default(cuid())
  provider_id     String    @unique
  hashed_password String?
  session         Session[]

  username String @unique

  @@map("user")
}

model Session {
  id           String @id @unique
  user_id      String
  expires      BigInt
  idle_expires BigInt
  user         User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model RouterTemplate {
  id       String @id @unique @default(cuid())
  title    String @unique
  template String

  Source Source[]
  Host   Host[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServiceTemplate {
  id       String @id @unique @default(cuid())
  title    String @unique
  template String

  Source Source[]
  Host   Host[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Source {
  id          String    @id @unique @default(cuid())
  title       String
  type        String
  address     String
  autoDelete  Boolean   @default(false)
  enabled     Boolean   @default(true)
  parameters  String?
  lastRefresh DateTime?

  defaultRouter     RouterTemplate?  @relation(fields: [routerTemplateId], references: [id])
  routerTemplateId  String?
  defaultService    ServiceTemplate? @relation(fields: [serviceTemplateId], references: [id])
  serviceTemplateId String?

  Host Host[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Host {
  id         String   @id @unique @default(cuid())
  title      String
  identifier String
  parameters String?
  lastSeen   DateTime
  errors     String?

  source   Source @relation(fields: [sourceId], references: [id])
  sourceId String

  customRouter     String?
  router           RouterTemplate? @relation(fields: [routerTemplateId], references: [id])
  routerTemplateId String?

  customService     String?
  service           ServiceTemplate? @relation(fields: [serviceTemplateId], references: [id])
  serviceTemplateId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
